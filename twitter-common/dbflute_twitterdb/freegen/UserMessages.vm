package ${request.package};

#if ($request.tableMap.superClassPackage)
import ${request.tableMap.superClassPackage}.${request.tableMap.superClassSimpleName};
#else
import org.apache.struts.action.ActionMessages;
#end
import org.apache.struts.action.ActionMessage;

/**
 * The keys for message.
 * @author FreeGen
 */
#if ($request.tableMap.superClassPackage)
public class ${request.className} extends ${request.tableMap.superClassSimpleName} {
#else
public class ${request.className} extends ActionMessages {
#end

    private static final long serialVersionUID = 1L;
#foreach ($column in $table.columnList)
#if (!$column.isExtends)
#if (!$column.isLabel)
#if (!$column.isOverride)

    /** The key of the message: ${column.propertyValue} */
    public static final String ${column.defName} = "${column.propertyKey}";
#end
#end
#end
#end
#foreach ($column in $table.columnList)
#if (!$column.isExtends)
#if (!$column.isLabel)

#if ($column.hasVariable)
    /**
     * Add the created action message for the key '${column.propertyKey}' with parameters.
     * <pre>
     * message: ${column.propertyValue}
#if ($column.comment != "")
     * comment: ${column.comment}
#end
     * </pre>
     * @param property The property name for the message. (NotNull)
#foreach ($variableNumber in $column.variableNumberList)
     * @param arg${variableNumber}
#end
     */
#if ($column.isOverride)
    @Override
#end
    public void add${column.capCamelName}(String property, ${column.variableArgDef}) {
        assertPropertyNotNull(property);
        add(property, new ActionMessage(${column.defName}, ${column.variableArgSet}));
    }
#else
    /**
     * Add the created action message for the key '${column.propertyKey}' with parameters.
     * <pre>
     * message: ${column.propertyValue}
#if ($column.comment != "")
     * comment: ${column.comment}
#end
     * </pre>
     * @param property The property name for the message. (NotNull)
     */
#if ($column.isOverride)
    @Override
#end
    public void add${column.capCamelName}(String property) {
        assertPropertyNotNull(property);
        add(property, new ActionMessage(${column.defName}, (Object[])null));
    }
#end
#end
#end
#end
#if (!$request.tableMap.superClassPackage)

    /**
     * Assert the property is not null.
     * @param property The value of the property. (NotNull)
     */
    protected void assertPropertyNotNull(String property) {
        if (property == null) {
            String msg = "The argument 'property' for message should not be null.";
            throw new IllegalArgumentException(msg);
        }
    }
#end

    /**
     * The definition of keys for labels.
     */
#if ($request.tableMap.superClassPackage)
    public static interface LabelKey extends ${request.tableMap.superClassSimpleName}.LabelKey {
#else
    public static interface LabelKey {
#end
#foreach ($column in $table.columnList)
#if (!$column.isExtends)
#if ($column.isLabel)

        /** The key of the label: ${column.propertyValue} */
        String ${column.defName} = "${column.propertyKey}";
#end
#end
#end
    }
}
